{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "C:\\Users\\MAHIL\\Documents\\Projetos\\kudos\\kudos\\app\\root.tsx", "C:\\Users\\MAHIL\\Documents\\Projetos\\kudos\\kudos\\app\\routes\\logout.ts", "../app/utils/auth.server.ts", "../app/utils/prisma.server.ts", "../app/utils/users.server.ts", "C:\\Users\\MAHIL\\Documents\\Projetos\\kudos\\kudos\\app\\routes\\index.ts", "C:\\Users\\MAHIL\\Documents\\Projetos\\kudos\\kudos\\app\\routes\\login.tsx", "../app/components/form-field.tsx", "../app/components/layout.tsx", "../app/utils/validator.server.ts", "C:\\Users\\MAHIL\\Documents\\Projetos\\kudos\\kudos\\app\\routes\\home.tsx", "../app/components/user-panel.tsx", "../app/components/user-circle.tsx", "C:\\Users\\MAHIL\\Documents\\Projetos\\kudos\\kudos\\app\\routes\\home\\kudo.$userId.tsx", "../app/components/modal.tsx", "../app/components/portal.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nimport styles from \"./styles/app.css\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport const links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: styles }];\n};\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\r\nimport { redirect } from \"@remix-run/node\";\r\nimport { logout } from \"~/utils/auth.server\";\r\n\r\nexport const action: ActionFunction = async ({ request }) => logout(request);\r\nexport const loader: LoaderFunction = async () => redirect(\"/\");", "import { redirect, json, createCookieSessionStorage } from \"@remix-run/node\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport { prisma } from \"./prisma.server\";\r\nimport type { LoginForm, RegisterForm } from \"./types.server\";\r\nimport { createUser } from \"./users.server\";\r\n\r\nconst sessionSecret = process.env.SESSION_SECRET\r\n\r\nif (!sessionSecret) {\r\n    throw new Error(\"SESSION_SECRET is not set\")\r\n}\r\n\r\nconst storage = createCookieSessionStorage({\r\n    cookie: {\r\n        name: 'kudos-session',\r\n        secure: process.env.NODE_ENV === 'production',\r\n        secrets: [sessionSecret],\r\n        sameSite: 'lax',\r\n        path: '/',\r\n        maxAge: 60 * 60 * 24 * 30,\r\n        httpOnly: true,\r\n    }\r\n})\r\n\r\nexport async function register(user: RegisterForm) {\r\n    const exists = await prisma.user.count({ where: { email: user.email } });\r\n\r\n    if (exists) {\r\n        return json({\r\n            error: \"User already exists with that email\"\r\n        }, {\r\n            status: 400\r\n        });\r\n    }\r\n\r\n    const newUser = await createUser(user);\r\n\r\n    if (!newUser) {\r\n        return json({\r\n            error: \"Failed to create user\",\r\n            fields: { email: user.email, password: user.password }\r\n        }, {\r\n            status: 400\r\n        });\r\n    }\r\n\r\n    return createUserSession(newUser.id, '/');\r\n}\r\n\r\nexport async function login({ email, password }: LoginForm) {\r\n    const user = await prisma.user.findUnique({ where: { email } });\r\n\r\n    if (!user || !(await bcrypt.compare(password, user.password))) {\r\n        return json({\r\n            error: \"Invalid email or password\"\r\n        }, {\r\n            status: 400\r\n        });\r\n    }\r\n\r\n    return createUserSession(user.id, '/');\r\n}\r\n\r\nexport async function createUserSession(userId: string, redirectTo: string) {\r\n    const session = await storage.getSession();\r\n\r\n    session.set('userId', userId);\r\n\r\n    return redirect(redirectTo, {\r\n        headers: {\r\n            'Set-Cookie': await storage.commitSession(session),\r\n        },\r\n    });\r\n}\r\n\r\nexport async function requiredUserId(request: Request, redirectTo: string = new URL(request.url).pathname) {\r\n    const session = await getUserSession(request);\r\n    const userId = session.get('userId');\r\n\r\n    if (!userId || typeof userId !== 'string') {\r\n        const searchParams = new URLSearchParams([['redirectTo', redirectTo]]);\r\n        throw redirect(`/login?${searchParams}`)\r\n    }\r\n\r\n    return userId\r\n}\r\n\r\nexport async function getUser(request: Request) {\r\n    const userId = await getUserId(request);\r\n\r\n    if (typeof userId !== 'string') {\r\n        return null;\r\n    }\r\n\r\n    try {\r\n        const user = await prisma.user.findUnique({\r\n            where: { id: userId },\r\n            select: { id: true, email: true, profile: true }\r\n        });\r\n\r\n        return user\r\n\r\n    } catch {\r\n        throw logout(request);\r\n    }\r\n}\r\n\r\nexport async function logout(request: Request) {\r\n    const session = await getUserSession(request);\r\n\r\n    return redirect('/login', {\r\n        headers: {\r\n            'Set-Cookie': await storage.destroySession(session),\r\n        },\r\n    });\r\n}\r\n\r\nasync function getUserId(request: Request) {\r\n    const session = await getUserSession(request);\r\n    const userId = session.get('userId');\r\n\r\n    if (!userId || typeof userId !== 'string') return null\r\n\r\n    return userId\r\n}\r\n\r\nfunction getUserSession(request: Request) {\r\n    return storage.getSession(request.headers.get('Cookie'));\r\n}", "import { PrismaClient } from \"@prisma/client\";\r\n\r\nlet prisma: PrismaClient;\r\n\r\ndeclare global {\r\n    var __db: PrismaClient | undefined;\r\n}\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n    prisma = new PrismaClient();\r\n    prisma.$connect();\r\n} else {\r\n    if (!global.__db) {\r\n        global.__db = new PrismaClient();\r\n        global.__db.$connect();\r\n    }\r\n    prisma = global.__db;\r\n}\r\n\r\nexport { prisma };", "import bcrypt from 'bcryptjs';\r\nimport type { RegisterForm } from './types.server';\r\nimport { prisma } from './prisma.server';\r\n\r\nexport const createUser = async (user: RegisterForm) => {\r\n    const { email, firstName, lastName, password } = user\r\n    const passwordHash = await bcrypt.hash(password, 10);\r\n\r\n    const newUser = await prisma.user.create({\r\n        data: {\r\n            email,\r\n            password: passwordHash,\r\n            profile: {\r\n                firstName,\r\n                lastName,\r\n            },\r\n        },\r\n    });\r\n\r\n    return { id: newUser.id, email: user.email };\r\n}\r\n\r\nexport const getOtherUsers = async (userId: string) => {\r\n    return prisma.user.findMany({\r\n        where: {\r\n            id: { not: userId },\r\n        },\r\n        orderBy: {\r\n            profile: {\r\n                firstName: 'asc',\r\n            },\r\n        },\r\n    });\r\n}\r\n\r\nexport const getUserById = async (userId: string) => {\r\n    return await prisma.user.findUnique({\r\n        where: {\r\n            id: userId,\r\n        },\r\n    });\r\n}", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\"\nimport { requiredUserId } from \"~/utils/auth.server\"\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await requiredUserId(request)\n  return redirect(\"/home\")\n}\n\n", "import { useState, useRef, useEffect } from 'react';\r\nimport type { ActionFunction, LoaderFunction } from '@remix-run/node';\r\nimport { useActionData } from '@remix-run/react';\r\nimport { json, redirect } from '@remix-run/node';\r\nimport { FormField } from '~/components/form-field';\r\nimport { Layout } from '~/components/layout';\r\nimport { validateEmail, validateName, validatePassword } from '~/utils/validator.server';\r\nimport { getUser, login, register } from '~/utils/auth.server';\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n    return (await getUser(request)) ? redirect('/') : null;\r\n}\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n    const form = await request.formData();\r\n    const action = form.get('_action');\r\n    const email = form.get('email');\r\n    const password = form.get('password');\r\n    let firstName = form.get('firstName');\r\n    let lastName = form.get('lastName');\r\n\r\n    if (typeof action !== 'string' || typeof email !== 'string' || typeof password !== 'string') {\r\n        return json({ error: `Invalid Form Data`, form: action }, { status: 400 })\r\n    }\r\n\r\n    if (action === 'register' && (typeof firstName !== 'string' || typeof lastName !== 'string')) {\r\n        return json({ error: `Invalid Form Data`, form: action }, { status: 400 })\r\n    }\r\n\r\n    const errors = {\r\n        email: validateEmail(email),\r\n        password: validatePassword(password),\r\n        ...(action === 'register' ?\r\n            {\r\n                firstName: validateName((firstName as string) || ''),\r\n                lastName: validateName((lastName as string) || '')\r\n            } : {})\r\n    };\r\n\r\n    if (Object.values(errors).some(Boolean))\r\n        return json({\r\n            errors,\r\n            fields: {\r\n                email,\r\n                password,\r\n                firstName,\r\n                lastName\r\n            }, form: action\r\n        }, { status: 400 })\r\n\r\n    switch (action) {\r\n        case 'login': {\r\n            return await login({ email, password });\r\n        }\r\n        case 'register': {\r\n            firstName = firstName as string\r\n            lastName = lastName as string\r\n            return await register({ email, password, firstName, lastName });\r\n        }\r\n        default:\r\n            return json({ error: `Invalid Form Data` }, { status: 400 })\r\n    }\r\n}\r\n\r\nexport default function Login() {\r\n    const actionData = useActionData();\r\n    const [action, setAction] = useState('login');\r\n    const firstLoad = useRef(true);\r\n    const [errors, setErrors] = useState(actionData?.erros || {});\r\n    const [formError, setFormError] = useState(actionData?.error || '');\r\n    const [formData, setFormData] = useState({\r\n        email: actionData?.fields?.email || '',\r\n        password: actionData?.fields?.password || '',\r\n        firstName: actionData?.fields?.lastName || '',\r\n        lastName: actionData?.fields?.firstName || '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!firstLoad.current) {\r\n            const newState = {\r\n                email: '',\r\n                password: '',\r\n                firstName: '',\r\n                lastName: ''\r\n            };\r\n\r\n            setErrors(newState);\r\n            setFormError('');\r\n            setFormData(newState);\r\n        }\r\n    }, [action]);\r\n\r\n    useEffect(() => {\r\n        if (!firstLoad.current) {\r\n            setFormError('');\r\n        }\r\n    }, [formData]);\r\n\r\n    useEffect(() => { firstLoad.current = false }, [])\r\n\r\n    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>, field: string) => {\r\n        event.preventDefault()\r\n        setFormData(form => ({ ...form, [field]: event.target.value }));\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"h-full justify-center items-center flex flex-col gap-y-4\">\r\n                <button\r\n                    onClick={() => setAction(action == 'login' ? 'register' : 'login')}\r\n                    className='absolute top-8 right-8 rounded-xl bg-yellow-300 font-semibold text-blue-600 px-3 py-2 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1'\r\n                >\r\n                    {action == 'login' ? 'Register' : 'Login'}\r\n                </button>\r\n\r\n                <h2 className=\"text-5xl font-extrabold text-yellow-300\">Welcome to Kudos!</h2>\r\n\r\n                <p className='font-semibold text-slate-300'>\r\n                    {action === 'login' ? 'Log In To Give Some Praise!' : 'Sign Up To Get Started!'}\r\n                </p>\r\n\r\n                <form method='POST' className=\"rounded-2xl bg-gray-200 p-6 w-96\">\r\n                    <div className=\"text-xs font-semibold text-center tracking-wide text-red-500 w-full\">{formError}</div>\r\n                    <FormField\r\n                        htmlFor='email'\r\n                        label='Email'\r\n                        type='email'\r\n                        value={formData.email}\r\n                        onChange={(event) => handleInputChange(event, 'email')}\r\n                        error={errors?.email}\r\n                    />\r\n                    <FormField\r\n                        htmlFor='password'\r\n                        label='Password'\r\n                        type='password'\r\n                        value={formData.password}\r\n                        onChange={(event) => handleInputChange(event, 'password')}\r\n                        error={errors?.password}\r\n                    />\r\n                    {action === 'register' && (\r\n                        <>\r\n                            <FormField\r\n                                htmlFor=\"firstName\"\r\n                                label=\"First Name\"\r\n                                onChange={e => handleInputChange(e, 'firstName')}\r\n                                value={formData.firstName}\r\n                                error={errors?.firstName}\r\n                            />\r\n                            <FormField\r\n                                htmlFor=\"lastName\"\r\n                                label=\"Last Name\"\r\n                                onChange={e => handleInputChange(e, 'lastName')}\r\n                                value={formData.lastName}\r\n                                error={errors?.lastName}\r\n                            />\r\n                        </>\r\n                    )}\r\n                    <div className='w-full text-center'>\r\n                        <button type=\"submit\" name=\"_action\" value={action} className=\"rounded-xl mt-2 bg-yellow-300 px-3 py-2 text-blue-600 font-semibold transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\">\r\n                            {\r\n                                action === 'login' ? \"Sign In\" : \"Sign Up\"\r\n                            }\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}", "import { useEffect, useState } from \"react\"\r\n\r\ninterface FormFieldProps {\r\n    htmlFor: string;\r\n    label: string;\r\n    type?: string;\r\n    value?: string;\r\n    onChange?: (...args: any) => any;\r\n    error?: string;\r\n}\r\n\r\nexport function FormField({\r\n    htmlFor,\r\n    label,\r\n    type = 'text',\r\n    value,\r\n    onChange = () => { },\r\n    error = \"\" }: FormFieldProps) {\r\n\r\n    const [errorText, setErrorText] = useState(error);\r\n\r\n    useEffect(() => {\r\n        setErrorText(error);\r\n    }, [error]);\r\n\r\n    return (\r\n        <div className=\"flex flex-col gap-y-2\">\r\n            <label htmlFor={htmlFor} className='text-blue-600 font-semibold'>\r\n                {label}\r\n            </label>\r\n            <input\r\n                type={type}\r\n                id={htmlFor}\r\n                name={htmlFor}\r\n                className='w-full p-2 rounded-xl my-2'\r\n                value={value}\r\n                onChange={e => {\r\n                    onChange(e)\r\n                    setErrorText('')\r\n                }}\r\n            />\r\n            <div className=\"text-xs font-semibold text-center tracking-wide text-red-500 w-full\">\r\n                {errorText || ''}\r\n            </div>\r\n        </div>\r\n    )\r\n}", "export function Layout({ children }: { children: React.ReactNode }) {\r\n    return (\r\n        <div className=\"h-screen w-full bg-blue-600 font-mono\">\r\n            {children}\r\n        </div>\r\n    )\r\n}", "export const validateEmail = (email: string): string | undefined => {\r\n    var validRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n    if (!email.length || !validRegex.test(email)) {\r\n        return \"Please enter a valid email address\"\r\n    }\r\n}\r\n\r\nexport const validatePassword = (password: string): string | undefined => {\r\n    if (password.length < 5) {\r\n        return \"Please enter a password that is at least 5 characters long\"\r\n    }\r\n}\r\n\r\nexport const validateName = (name: string): string | undefined => {\r\n    if (!name.length) return `Please enter a value`\r\n}", "import type { LoaderFunction } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\"\r\nimport { Layout } from \"~/components/layout\"\r\nimport { UserPanel } from \"~/components/user-panel\"\r\nimport { requiredUserId } from \"~/utils/auth.server\"\r\nimport { getOtherUsers } from \"~/utils/users.server\"\r\nimport { Outlet, useLoaderData } from \"@remix-run/react\";\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n    const userId = await requiredUserId(request)\r\n    const users = await getOtherUsers(userId)\r\n\r\n    return json({ users })\r\n}\r\n\r\nexport default function Home() {\r\n    const { users } = useLoaderData()\r\n\r\n    return (\r\n        <Layout>\r\n            <Outlet />\r\n            <div className=\"flex h-full\">\r\n                <UserPanel users={users} />\r\n            </div>\r\n        </Layout>\r\n    )\r\n}", "import type { User } from \"@prisma/client\"\r\nimport { useNavigate } from \"@remix-run/react\"\r\nimport { UserCircle } from \"./user-circle\"\r\n\r\ninterface UserPanelProps {\r\n    users: User[]\r\n}\r\n\r\nexport function UserPanel({ users }: UserPanelProps) {\r\n    const navigate = useNavigate()\r\n\r\n    return (\r\n        <div className=\"w-1/6 bg-gray-200 flex flex-col\">\r\n            <div className=\"text-center bg-gray-300 h-20 flex items-center justify-center\">\r\n                <h2 className=\"text-xl text-blue-600 font-semibold\">My Team</h2>\r\n            </div>\r\n            <div className=\"flex-1 overflow-y-scroll py-4 flex flex-col gap-y-10 items-center\">\r\n                {\r\n                    users.map(user => (\r\n                        <UserCircle\r\n                            key={user.id}\r\n                            profile={user.profile}\r\n                            className=\"h-24 w-24 max-auto flex-shrink-0\"\r\n                            onClick={() => navigate(`kudo/${user.id}`)}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className=\"text-center p-6 bg-gray-300\">\r\n                <form action=\"/logout\" method=\"POST\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"rounded-xl bg-yellow-300 font-semibold text-blue-600 px-3 py-2 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\"\r\n                    >\r\n                        Sign Out\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}", "import type { Profile } from '@prisma/client'\r\n\r\ninterface UserCircleProps {\r\n    profile: Profile\r\n    className?: string\r\n    onClick?: (...args: any) => any\r\n}\r\n\r\nexport function UserCircle({ profile, onClick, className }: UserCircleProps) {\r\n    return (\r\n        <div\r\n            className={`${className} cursor-pointer bg-gray-400 rounded-full flex justify-center items-center`}\r\n            onClick={onClick}\r\n        >\r\n            <h2>\r\n                {profile.firstName.charAt(0).toUpperCase()}\r\n                {profile.lastName.charAt(0).toUpperCase()}\r\n            </h2>\r\n        </div>\r\n    )\r\n}", "import type { LoaderFunction } from \"@remix-run/node\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport { Modal } from \"~/components/modal\";\r\nimport { getUserById } from \"~/utils/users.server\";\r\n\r\nexport const loader: LoaderFunction = async ({ request, params }) => {\r\n    const { userId } = params;\r\n\r\n    if (typeof userId !== \"string\") {\r\n        return redirect(\"/home\");\r\n    }\r\n\r\n    const recipient = await getUserById(userId)\r\n    return json({ recipient })\r\n}\r\n\r\nexport default function KudoModal() {\r\n    const data = useLoaderData()\r\n\r\n    const {\r\n        profile: {\r\n            firstName,\r\n            lastName\r\n        }\r\n    } = data.recipient\r\n\r\n    return (\r\n        <Modal isOpen={true}>\r\n            <h2>User: {firstName} {lastName}</h2>\r\n        </Modal>\r\n    )\r\n}", "/* eslint-disable jsx-a11y/aria-props */\r\nimport { useNavigate } from \"@remix-run/react\";\r\nimport { Portal } from \"./portal\";\r\n\r\ninterface ModalProps {\r\n    children: React.ReactNode;\r\n    className?: string;\r\n    isOpen: boolean;\r\n    ariaLabel?: string;\r\n}\r\n\r\nexport const Modal: React.FC<ModalProps> = ({ children, className, isOpen, ariaLabel }) => {\r\n    const navigate = useNavigate();\r\n\r\n    if (!isOpen) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Portal wrapperId=\"modal\">\r\n            <div\r\n                className=\"fixed inset-0 overflow-y-auto bg-gray-600 bg-opacity-80\"\r\n                aria-aria-labelledby={ariaLabel ?? 'moda-title'}\r\n                role=\"dialog\"\r\n                aria-modal=\"true\"\r\n                onClick={() => navigate(\"/home\")}\r\n            ></div>\r\n            <div className=\"fixed inset-0 pointer-events-none flex justify-center items-center max-h-screen overflow-scroll\">\r\n                <div className={`${className} p-4 bg-gray-200 pointer-events-auto max-h-screen md:rounded-xl`}>\r\n                    {/* This is where the modal content is rendered  */}\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </Portal>\r\n    )\r\n}", "import { createPortal } from \"react-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\ninterface PortalProps {\r\n    children: React.ReactNode;\r\n    wrapperId: string;\r\n}\r\n\r\nconst createWrapper = (wrapperId: string) => {\r\n    const wrapper = document.createElement(\"div\");\r\n    wrapper.setAttribute(\"id\", wrapperId);\r\n    document.body.appendChild(wrapper);\r\n    return wrapper;\r\n}\r\n\r\nexport const Portal: React.FC<PortalProps> = ({ children, wrapperId }) => {\r\n    const [wrapper, setWrapper] = useState<HTMLElement | null>(null);\r\n\r\n    useEffect(() => {\r\n        let element = document.getElementById(wrapperId);\r\n        let created = false;\r\n\r\n        if (!element) {\r\n            created = true;\r\n            element = createWrapper(wrapperId);\r\n        }\r\n\r\n        setWrapper(element);\r\n\r\n        return () => {\r\n            if (created && element?.parentNode) {\r\n                element.parentNode.removeChild(element);\r\n            }\r\n        };\r\n    }, [wrapperId]);\r\n\r\n    if (!wrapper) {\r\n        return null;\r\n    }\r\n\r\n    return createPortal(children, wrapper);\r\n}\r\n", "export default {'version':'10fd2343','entry':{'module':'/build/entry.client-X5QBRWBD.js','imports':['/build/_shared/chunk-SXNYENQH.js','/build/_shared/chunk-QVFEYKMH.js','/build/_shared/chunk-6BO74FWO.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-EVDYKQUS.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/home':{'id':'routes/home','parentId':'root','path':'home','index':undefined,'caseSensitive':undefined,'module':'/build/routes/home-EHICNI5V.js','imports':['/build/_shared/chunk-NAZRKZ3B.js','/build/_shared/chunk-HJ4VVQNC.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/home/kudo.$userId':{'id':'routes/home/kudo.$userId','parentId':'routes/home','path':'kudo/:userId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/home/kudo.$userId-PWD6KZPW.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-N6LQYEVJ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-3QSGUCP2.js','imports':['/build/_shared/chunk-NAZRKZ3B.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-KKRY6HVI.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-10FD2343.js'};", "\nimport * as entryServer from \"C:\\\\Users\\\\MAHIL\\\\Documents\\\\Projetos\\\\kudos\\\\kudos\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"C:\\\\Users\\\\MAHIL\\\\Documents\\\\Projetos\\\\kudos\\\\kudos\\\\app\\\\root.tsx\";\nimport * as route1 from \"C:\\\\Users\\\\MAHIL\\\\Documents\\\\Projetos\\\\kudos\\\\kudos\\\\app\\\\routes\\\\logout.ts\";\nimport * as route2 from \"C:\\\\Users\\\\MAHIL\\\\Documents\\\\Projetos\\\\kudos\\\\kudos\\\\app\\\\routes\\\\index.ts\";\nimport * as route3 from \"C:\\\\Users\\\\MAHIL\\\\Documents\\\\Projetos\\\\kudos\\\\kudos\\\\app\\\\routes\\\\login.tsx\";\nimport * as route4 from \"C:\\\\Users\\\\MAHIL\\\\Documents\\\\Projetos\\\\kudos\\\\kudos\\\\app\\\\routes\\\\home.tsx\";\nimport * as route5 from \"C:\\\\Users\\\\MAHIL\\\\Documents\\\\Projetos\\\\kudos\\\\kudos\\\\app\\\\routes\\\\home\\\\kudo.$userId.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/home\": {\n      id: \"routes/home\",\n      parentId: \"root\",\n      path: \"home\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/home/kudo.$userId\": {\n      id: \"routes/home/kudo.$userId\",\n      parentId: \"routes/home\",\n      path: \"kudo/:userId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    }\n  };"],
  "mappings": "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",
  "names": []
}
